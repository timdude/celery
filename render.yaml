services:
  - type: worker
    name: queue
    region: oregon
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery --app tasks worker --loglevel info --concurrency 4"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
  - type: web
    name: app
    region: oregon
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn app:app"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
  - type: web
    name: flower
    region: oregon
    plan: free
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery flower --app tasks --loglevel info"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
  - type: redis
    name: celery-redis
    region: oregon
    plan: starter # we choose a plan with persistence to ensure tasks are not lost upon restart
    maxmemoryPolicy: noeviction # recommended policy for queues
    ipAllowList: [] # only allow internal connections
